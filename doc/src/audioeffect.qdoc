/*!
  \qmltype AudioEffect
  \ingroup beatlib
  \brief Analyzes and/or modifies MP3Decoder output.

  An \l AudioEffect can be used with \l MP3Decoder::effect to analyze and/or modify its decoded audio signal.

  \l AudioEffect itself is an abstract type.
  You can use one of the existing concrete types, or subclass \l AudioEffect yourself and override the \l processSample() method.

  Existing types include:
  \list
    \li \l BeatDetector
    \li \l DirectForm2Filter
    \li \l MultiEffect
    \li \l PeakFinder
    \li \l VolumeDetector
  \endlist
 */

/*!
  \qmlmethod bool AudioEffect::processSample(var channels, int sampleIndex, real maxValue, real minValue)

  Process one sample of the \l MP3Decoder's audio signal.
  The parameter \a channels contains one \c real sample value for each channel of the audio signal.
  This means it is an array with 1 entry for mono signals and 2 entries for stereo signals.

  This method should be overridden in custom \l AudioEffect implementations.
  The values in \a channels can be modified.
  However the data is only written back to the original signal if this method returns true.
  Even if you did not modifiy the data, return false to indicate this, for improved performance.

  The parameter \a sampleIndex indicates this sample's index, from the start of the audio signal.
  The parameters \a minValue and \a maxValue indicate the sample's range.
  These are often but not necessarily \c -1.0 and \c 1.0, respectively.

  \note This method is not callable from QML, it is only called internal from \l MP3Decoder.
 */

/*!
  \qmlproperty int AudioEffect::startTime

  A time interval in milliseconds since \c 1970/01/01 when the filtering started.

  Implementations can use this to calculate the actual time when a specific sample in the audio signal will be played back.

  You can bind this variable in QML to \l MP3Decoder::startTime.
 */

/*!
  \qmlproperty bool AudioEffect::enabled

  Determines if the effect is enabled.

  If this property is set to false, \l MP3Decoder and \l MultiEffect will ignore this effect.
 */

/*!
  \qmlmethod void AudioEffect::resetState

  Reset the audio effect algorithm's state and memory.
  Call this to treat the rest of the \l MP3Decoder's audio signal like a completely new audio signal.

  Implementations of this class may override this method to clear any temporary algorithm state.
 */

